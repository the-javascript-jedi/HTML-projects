* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /* https://bennettfeely.com/clippy/ */
  /* clip-path: polygon(x y, x y, x y, x y); */
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); }

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px; }

.logo {
  height: 35px; }

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* animation issue fix for the text going up */
  backface-visibility: hidden;
  margin-bottom: 60px; }

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  /* specify the keyframes animation name */
  animation-name: moveInLeft;
  /* specify the keyframes animation duration */
  animation-duration: 1s;
  /* specify the animation delay */
  /* animation-delay: 3s; */
  /* specify the animation count */
  /* animation-iteration-count: 3; */
  animation-timing-function: ease-out; }

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 18px;
  /* shorthand for all animation */
  animation: moveInRight 1s ease-out; }

/* animation to move box from left */
@keyframes moveInLeft {
  0% {
    /* beginning of animation we want it to be invisible */
    opacity: 0;
    /* we need to simulate the box move from left to right so initially we keep it as left */
    transform: translateX(-100px); }
  80% {
    transform: translateX(10px); }
  100% {
    /* at end of animation we need to show the box */
    opacity: 1;
    /* we need to move the box to original position*/
    transform: translate(0px); } }

/* animation to move box from right */
@keyframes moveInRight {
  0% {
    /* beginning of animation we want it to be invisible */
    opacity: 0;
    /* we need to simulate the box move from left to right so initially we keep it as left */
    transform: translateX(100px); }
  80% {
    transform: translateX(-10px); }
  100% {
    /* at end of animation we need to show the box */
    opacity: 1;
    /* we need to move the box to original position*/
    transform: translate(0px); } }

/* animation to move box from bottom */
@keyframes moveInBottom {
  0% {
    /* beginning of animation we want it to be invisible */
    opacity: 0;
    /* we need to simulate the box move from bottom */
    transform: translateY(30px); }
  100% {
    /* at end of animation we need to show the box */
    opacity: 1;
    /* we need to move the box to original position*/
    transform: translate(0px); } }

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  /* transition all transform properties */
  /* transition must be kept on initial state when we modify pseudo classes*/
  transition: all 0.2s;
  position: relative; }

.btn:hover {
  transform: translateY(-3px);
  /* on hover show a box shadow */
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); }

/* click state */
.btn:active {
  transform: translateY(-1px);
  /* on click reduce the box shadow */
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); }

.btn-white {
  background-color: #fff;
  color: #777; }

/* after - behind button */
/* after will be treated like a child element so we provide width as well*/
.btn::after {
  /* for after - we need to specify content and display property */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn-white::after {
  background-color: #fff; }

/* obn hover of button we apply a scale transform to the :after */
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn-animated {
  /*shorthand - animation name,duration,timingfunction,animation delay  */
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* automatically apply the styles from 0% before animation starts */
  animation-fill-mode: backwards; }
